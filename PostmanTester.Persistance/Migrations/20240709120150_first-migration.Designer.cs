// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostmanTester.Persistance.Contexts;

#nullable disable

namespace PostmanTester.Persistance.Migrations
{
    [DbContext(typeof(PostmanTesterDbContext))]
    [Migration("20240709120150_first-migration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PostmanTester.Domain.Entities.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.Role", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varbinary");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varbinary");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("RoleId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.ApiKey", b =>
                {
                    b.HasOne("PostmanTester.Domain.Entities.User", "CreatedUser")
                        .WithMany("ApiKeyCreatedUsers")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("PostmanTester.Domain.Entities.User", "DeletedUser")
                        .WithMany("ApiKeyDeletedUsers")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("PostmanTester.Domain.Entities.User", "UpdatedUser")
                        .WithMany("ApiKeyUpdatedUsers")
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("PostmanTester.Domain.Entities.User", "User")
                        .WithMany("ApiKeys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("UpdatedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.Role", b =>
                {
                    b.HasOne("PostmanTester.Domain.Entities.User", "CreatedUser")
                        .WithMany("RoleCreatedUsers")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("PostmanTester.Domain.Entities.User", "DeletedUser")
                        .WithMany("RoleDeletedUsers")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("PostmanTester.Domain.Entities.User", "UpdatedUser")
                        .WithMany("RoleUpdatedUsers")
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("UpdatedUser");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.User", b =>
                {
                    b.HasOne("PostmanTester.Domain.Entities.User", "CreatedUser")
                        .WithMany("UserCreatedUsers")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("PostmanTester.Domain.Entities.User", "DeletedUser")
                        .WithMany("UserDeletedUsers")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("PostmanTester.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PostmanTester.Domain.Entities.User", "UpdatedUser")
                        .WithMany("UserUpdatedUsers")
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("Role");

                    b.Navigation("UpdatedUser");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PostmanTester.Domain.Entities.User", b =>
                {
                    b.Navigation("ApiKeyCreatedUsers");

                    b.Navigation("ApiKeyDeletedUsers");

                    b.Navigation("ApiKeyUpdatedUsers");

                    b.Navigation("ApiKeys");

                    b.Navigation("RoleCreatedUsers");

                    b.Navigation("RoleDeletedUsers");

                    b.Navigation("RoleUpdatedUsers");

                    b.Navigation("UserCreatedUsers");

                    b.Navigation("UserDeletedUsers");

                    b.Navigation("UserUpdatedUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
